/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.form;

import Style.Forms;
import conexion.Conexion;
import java.awt.Container;
import java.sql.Connection;
import controladores.*;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.JOptionPane;

/**
 *
 * @author dbpan
 */
public class frmArticulos extends javax.swing.JPanel {

    private Container bgContainer;
    String operacion = "";
    private ArrayList<JTextField> camposDeTexto = new ArrayList<>();
    private JTextField[] textFieldsToStyle = new JTextField[3];
    Icon customIcon = new ImageIcon(getClass().getResource("/img/check_icon2.png"));

    /**
     * Creates new form frmArticulos
     */
    public frmArticulos() {
        initComponents();
        bgContainer = this;
        Forms formsPanel = new Forms(bgContainer, jPTitle);
        textFieldsToStyle[0] = txtNombreProducto;
        textFieldsToStyle[1] = txtPrecio;
        textFieldsToStyle[2] = txtCodigoProducto;
        inhabilitar();
        ObtenerNombreProducto();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jPTitle = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigoProducto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbxImpuesto = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaDescripcion = new javax.swing.JTextArea();
        txtNombreProducto = new javax.swing.JTextField();
        cbxProductos = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbxMagnitud = new javax.swing.JComboBox<>();

        setOpaque(false);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setOpaque(false);
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPTitle.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(125, 125, 125));
        jLabel1.setText("DATOS DEL ATÍCULO");

        javax.swing.GroupLayout jPTitleLayout = new javax.swing.GroupLayout(jPTitle);
        jPTitle.setLayout(jPTitleLayout);
        jPTitleLayout.setHorizontalGroup(
            jPTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(854, Short.MAX_VALUE))
        );
        jPTitleLayout.setVerticalGroup(
            jPTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        bg.add(jPTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 1040, 50));
        bg.add(txtCodigoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 180, 370, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Impuesto (%) :");
        bg.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, -1, -1));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Código del Producto :");
        bg.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 160, -1, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Descripción :");
        bg.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));
        bg.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, 220, -1));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Precio :");
        bg.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, -1, -1));

        cbxImpuesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "7", "10", "15" }));
        bg.add(cbxImpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 530, 90, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Nombre Atículo :");
        bg.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        bg.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 710, 120, 40));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        bg.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 710, 120, 40));

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        bg.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 710, 120, 40));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        bg.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 100, 120, 40));

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        bg.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 710, 120, 40));

        txtaDescripcion.setColumns(20);
        txtaDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtaDescripcion);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 980, 120));
        bg.add(txtNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 450, -1));

        cbxProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxProductosActionPerformed(evt);
            }
        });
        bg.add(cbxProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, 380, -1));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Magnitud de Unidades:");
        bg.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, -1, -1));

        cbxMagnitud.setForeground(new java.awt.Color(102, 102, 102));
        cbxMagnitud.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unidades", "Piezas", "Docenas", "cm", "m", "m cuadrados", "m Cúbicos", "Pulgadas", "Yardas", "Yardas líneales", "Pies ", "Pies Cúbicos", "Litros", "Galones", "Pintas", "Onzas", "Kg", "Lb", "Páginas", "Resmas", "Toneladas" }));
        cbxMagnitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMagnitudActionPerformed(evt);
            }
        });
        bg.add(cbxMagnitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 230, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 1096, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ObtenerNombreProducto() {
        // Instanciar la clase Clientes
        Articulos producto = new Articulos();
        Connection conexion = Conexion.obtenerConexion();

        try {
            // Establecer la conexión a la base de datos aquí

            List<String> Productos = producto.getAllProductos(conexion);

            // Limpiar el JComboBox antes de agregar los nuevos elementos
            cbxProductos.removeAllItems();

            for (String nombreproducto : Productos) {
                cbxProductos.addItem(nombreproducto);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Cerrar la conexión a la base de datos aquí
        }

    }

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        operacion = "nuevo";
        habilitar();
        btnBuscar.setEnabled(false);
        btnNuevo.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        cbxProductos.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        operacion = "modificar";
        habilitar();
        btnEditar.setEnabled(false);
        btnBuscar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnNuevo.setEnabled(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * Maneja el evento de guardar un producto en la base de datos.
     *
     * @param evt El evento de acción que activó este método.
     */
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // Obtiene una conexión a la base de datos.
        Connection conexion = Conexion.obtenerConexion();

        // Crea un objeto Articulos para manejar los datos del producto.
        Articulos obj_insertProductos = new Articulos();

        // Verifica si el campo del Código de Producto está vacío.
        if (txtCodigoProducto.getText().trim().isEmpty()) {
            // Muestra un mensaje de error si el campo está vacío y pide al usuario que lo complete.
            JOptionPane.showMessageDialog(null, "El Codigo de Producto no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            txtCodigoProducto.requestFocus();
        } else {
            if (conexion != null) {

                // Asigna los valores de los campos a las propiedades del objeto Articulos.
                obj_insertProductos.setCodigoproducto(txtCodigoProducto.getText().trim());
                obj_insertProductos.setNombreproducto(txtNombreProducto.getText().trim());
                obj_insertProductos.setDescripcion(txtaDescripcion.getText().trim());
                obj_insertProductos.setMagnitud(cbxMagnitud.getSelectedItem().toString());
                obj_insertProductos.setPrecio(Float.parseFloat(txtPrecio.getText().trim()));
                obj_insertProductos.setItbms(Double.parseDouble(cbxImpuesto.getSelectedItem().toString()));

                // Comprueba si se está realizando una operación de inserción o modificación.
                if (operacion.equals("nuevo")) {
                    // Obtiene una lista de códigos de productos existentes en la base de datos.
                    List<String> codigosProductos = obj_insertProductos.getAllCodigoProductos(conexion);
                    // Recorre la lista de códigos de productos.
                    for (String cproductos : codigosProductos) {
                        // Comprueba si el código del producto ya existe en la base de datos.
                        if (cproductos.equals(txtCodigoProducto.getText())) {
                            // Muestra un mensaje de error y detiene el flujo si el código existe.
                            JOptionPane.showMessageDialog(null, "Este código del producto ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
                            return; // Sale del método actual y detiene el flujo del programa
                        }
                    }
                    // Intenta insertar el producto en la base de datos y obtiene el número de filas afectadas.
                    int filasAfectadas = obj_insertProductos.insertProductos(conexion, obj_insertProductos);
                    if (filasAfectadas > 0) {
                        // Notifica al usuario que los datos se han guardado con éxito.
                        JOptionPane.showMessageDialog(null, "Los datos se han guardado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE, customIcon);
                        // Si se insertaron filas, significa que los datos se guardaron con éxito.
                        inhabilitar();
                        limpiarCampos();
                        btnNuevo.setEnabled(true);
                        cbxProductos.setEnabled(true);
                    } else {
                        // Si no se actualizaron filas, muestra un mensaje de error.
                        JOptionPane.showMessageDialog(null, "Los datos no se han podido guardar", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (operacion.equals("modificar")) {
                    // Intenta actualizar el producto en la base de datos y obtiene el número de filas afectadas.
                    int filasAfectadas = obj_insertProductos.actualizarProducto(conexion, obj_insertProductos);
                    if (filasAfectadas > 0) {
                        // Notifica al usuario que los datos se han actualizado con éxito.
                        JOptionPane.showMessageDialog(null, "Los datos se han actualizado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE, customIcon);
                        // Si se actualizaron filas, significa que los datos se han actualizado con éxito.
                        inhabilitar();
                        limpiarCampos();

                        btnNuevo.setEnabled(true);
                    } else {
                        // Si no se actualizaron filas, muestra un mensaje de error.
                        JOptionPane.showMessageDialog(null, "Los datos no se han podido actualizar", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }

                // Cierra la conexión a la base de datos.
                Conexion.cerrarConexion(conexion);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // Obtiene una conexión a la base de datos.
        Connection conexion = Conexion.obtenerConexion();

        // Crea un objeto Articulos para manejar los datos del producto.
        Articulos producto = new Articulos(); // Crear un objeto de la clase Articulos

        if (conexion != null) {
            // Obtiene el nombre del producto seleccionado en el ComboBox y lo asigna al objeto producto.
            producto.setNombreproducto(cbxProductos.getSelectedItem().toString());

            // Llama al método en la clase Articulos para obtener información del producto por nombre.
            producto.InfoProductoPorNombre(conexion);

            // Cierra la conexión a la base de datos.
            Conexion.cerrarConexion(conexion);
        }

        // Asigna los datos del producto a los campos de texto y ComboBox.
        txtNombreProducto.setText(producto.getNombreproducto());
        txtCodigoProducto.setText(producto.getCodigoproducto());
        txtaDescripcion.setText(producto.getDescripcion());
        cbxMagnitud.setSelectedItem(producto.getMagnitud());
        txtPrecio.setText(String.valueOf(producto.getPrecio()));
        cbxImpuesto.setSelectedItem(String.valueOf(producto.getItbms()));

        if (producto.getNombreproducto() != null) {
            // Producto encontrado, habilita los botones de edición y eliminación.
            btnEditar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnNuevo.setEnabled(false);
        } else {
            // Producto no encontrado, deshabilita los botones de edición y eliminación.
            btnEditar.setEnabled(false);
            btnEliminar.setEnabled(false);
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Obtiene una conexión a la base de datos.
        Connection conexion = Conexion.obtenerConexion();

        // Crea un objeto de la clase Articulos para gestionar los datos del producto.
        Articulos productos = new Articulos();

        if (conexion != null) {
            // Obtiene el nombre del producto desde el campo de texto.
            String nombre = txtNombreProducto.getText();

            // Muestra un cuadro de diálogo de confirmación para la eliminación.
            int opcion = JOptionPane.showConfirmDialog(null, "¿Está seguro de querer eliminar este producto?", "Confirmación", JOptionPane.YES_NO_OPTION);

            if (opcion == JOptionPane.YES_OPTION) {
                // Asigna el código del producto al objeto productos.
                productos.setCodigoproducto(txtCodigoProducto.getText().trim());

                // Llama al método en la clase Articulos para eliminar el producto por su código.
                int filasAfectadas = productos.deleteProductoporCodigo(conexion);

                // Cierra la conexión a la base de datos.
                Conexion.cerrarConexion(conexion);
                if (filasAfectadas > 0) {
                    // Notifica al usuario que el producto se ha eliminado con éxito.
                    JOptionPane.showMessageDialog(null, "El producto: " + nombre + " se ha eliminado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE, customIcon);
                    btnNuevo.setEnabled(true);

                    // Limpia los campos después de la eliminación.
                    limpiarCampos();
                } else {
                    // Notifica al usuario que no se pudo eliminar el producto.
                    JOptionPane.showMessageDialog(null, "El producto: " + nombre + " no se ha podido eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
                    btnNuevo.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    private void cbxMagnitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMagnitudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMagnitudActionPerformed

    private void cbxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxProductosActionPerformed

    public void inhabilitar() {
        // Deshabilita campos y botones
        txtNombreProducto.setEnabled(false);
        txtCodigoProducto.setEnabled(true);
        txtaDescripcion.setEnabled(false);
        cbxMagnitud.setEnabled(false);
        txtPrecio.setEnabled(false);
        cbxImpuesto.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnBuscar.setEnabled(true);
        txtCodigoProducto.setEnabled(false);
        txtaDescripcion.setBackground(new Color(214, 234, 248));
        colorTexfiel(); // Llama al método colorTexfiel para aplicar estilos
    }

    public void habilitar() {
        // Habilita campos y botones
        txtNombreProducto.setEnabled(true);
        txtCodigoProducto.setEnabled(true);
        txtaDescripcion.setEnabled(true);
        cbxMagnitud.setEnabled(true);
        txtPrecio.setEnabled(true);
        cbxImpuesto.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        txtaDescripcion.setBackground(Color.WHITE);
        colorTexfiel(); // Llama al método colorTexfiel para aplicar estilos
    }

    public void limpiarCampos() {
        // Limpia el contenido de los campos de texto
        for (JTextField campo : camposDeTexto) {
            campo.setText("");
        }
        txtNombreProducto.setText("");
        txtCodigoProducto.setText("");
        txtaDescripcion.setText("");
        txtPrecio.setText("");
    }

    public void colorTexfiel() {
        for (JTextField textField : textFieldsToStyle) {
            if (textField != null) { // Verifica que el textField no sea nulo
                if (!textField.isEnabled()) {
                    // Cambia el color de fondo y texto para campos inhabilitados
                    textField.setBackground(new Color(214, 234, 248));
                } else {
                    // Restablece los colores originales para campos habilitados
                    textField.setBackground(Color.WHITE);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbxImpuesto;
    private javax.swing.JComboBox<String> cbxMagnitud;
    private javax.swing.JComboBox<String> cbxProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCodigoProducto;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextArea txtaDescripcion;
    // End of variables declaration//GEN-END:variables
}
